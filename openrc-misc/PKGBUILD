# Maintainer: artoo <artoo@manjaro.org>

_url="https://raw.githubusercontent.com/gentoo/gentoo/master"

pkgbase=openrc-misc
pkgname=('cpupower-openrc'
        'connman-openrc'
        'fcron-openrc'
        'fuse-openrc'
        'metalog-openrc'
        'rsyslog-openrc'
        'sane-openrc'
        'syslog-ng-openrc'
        'lirc-utils-openrc'
        'lm_sensors-openrc'
        'ntp-openrc'
        'cups-openrc'
        'haveged-openrc'
        'salt-openrc'
        'mpd-openrc'
        'hdparm-openrc'
        'bitlbee-openrc'
        'thermald-openrc'
        'xe-guest-utilities-openrc'
        'virtualbox-guest-utils-openrc'
        'zfs-openrc'
        'clamav-openrc'
        'boinc-openrc'
        'at-openrc'
        'libvirt-openrc'
        'brltty-openrc'
        'laptop-mode-tools-openrc')
pkgver=20160528
pkgrel=1
pkgdesc="OpenRC init scripts"
arch=('any')
url="https://github.com/manjaro/packages-openrc"
license=('GPL2')
source=("fcron.initd::${_url}/sys-process/fcron/files/fcron.init.3"
        "rsyslog.confd::${_url}/app-admin/rsyslog/files/8-stable/rsyslog.confd-r1"
        "rsyslog.initd::${_url}/app-admin/rsyslog/files/8-stable/rsyslog.initd-r1"
        "saned.confd::${_url}/media-gfx/sane-backends/files/saned.confd"
        "saned.initd::${_url}/media-gfx/sane-backends/files/saned.initd"
        "fuse.initd::${_url}/sys-fs/fuse/files/fuse.init"
        "metalog.confd::${_url}/app-admin/metalog/files/metalog.confd"
        "metalog.initd::${_url}/app-admin/metalog/files/metalog.initd"
        "syslog-ng.confd::${_url}/app-admin/syslog-ng/files/3.7/syslog-ng.confd"
        "syslog-ng.initd::${_url}/app-admin/syslog-ng/files/3.7/syslog-ng.rc6"
        "lircd.confd::${_url}/app-misc/lirc/files/lircd.conf.4"
        "irexec.confd::${_url}/app-misc/lirc/files/irexec-confd"
        "lircd.initd::${_url}/app-misc/lirc/files/lircd-0.8.6-r2"
        "irexec.initd::${_url}/app-misc/lirc/files/irexec-initd-0.8.6-r2"
        "lircmd.initd::${_url}/app-misc/lirc/files/lircmd"
        "cpupower.confd::${_url}/sys-power/cpupower/files/conf.d-r2"
        "cpupower.initd::${_url}/sys-power/cpupower/files/init.d-r4"
        #"sensord.confd::${_url}/sys-apps/lm_sensors/files/sensord-conf.d"
        "sensord.initd::${_url}/sys-apps/lm_sensors/files/sensord-4-init.d"
        "fancontrol.initd::${_url}/sys-apps/lm_sensors/files/fancontrol-init.d-2"
        "lm_sensors.initd::${_url}/sys-apps/lm_sensors/files/lm_sensors-3-init.d"
        "ntpd.confd::${_url}/net-misc/ntp/files/ntpd.confd"
        "ntp-client.confd::${_url}/net-misc/ntp/files/ntp-client.confd"
        "sntp.confd::${_url}/net-misc/ntp/files/sntp.confd"
        "ntpd.initd::${_url}/net-misc/ntp/files/ntpd.rc-r1"
        "ntp-client.initd::${_url}/net-misc/ntp/files/ntp-client.rc"
        "sntp.initd::${_url}/net-misc/ntp/files/sntp.rc"
        "cupsd.initd::${_url}/net-print/cups/files/cupsd.init.d-r2"
        "connman.confd::${_url}/net-misc/connman/files/connman.confd"
        "connman.initd::${_url}/net-misc/connman/files/connman.initd2"
        "haveged.confd::${_url}/sys-apps/haveged/files/haveged-conf.d"
        "haveged.initd::${_url}/sys-apps/haveged/files/haveged-init.d.3"
        "salt-master.confd::${_url}/app-admin/salt/files/master-confd-1"
        "salt-master.initd::${_url}/app-admin/salt/files/master-initd-4"
        "salt-minion.confd::${_url}/app-admin/salt/files/minion-confd-1"
        "salt-minion.initd::${_url}/app-admin/salt/files/minion-initd-4"
        "salt-syncdic.confd::${_url}/app-admin/salt/files/syndic-confd-1"
        "salt-syncdic.initd::${_url}/app-admin/salt/files/syndic-initd-4"
        "salt-api.confd::${_url}/app-admin/salt/files/api-confd-1"
        "salt-api.initd::${_url}/app-admin/salt/files/api-initd-4"
        "mpd.initd::${_url}/media-sound/mpd/files/mpd2.init"
        "hdparm.confd::${_url}/sys-apps/hdparm/files/hdparm-conf.d.3"
        "hdparm.initd::${_url}/sys-apps/hdparm/files/hdparm-init-8"
        "bitlbee.confd::${_url}/net-im/bitlbee/files/bitlbee.confd-r1"
        "bitlbee.initd::${_url}/net-im/bitlbee/files/bitlbee.initd-r1"
        "xe-daemon.initd::${_url}/app-emulation/xe-guest-utilities/files/xe-daemon.initd"
        "vboxservice.initd::${_url}/app-emulation/virtualbox-guest-additions/files/virtualbox-guest-additions-8.initd"
        "clamd.confd::${_url}/app-antivirus/clamav/files/clamd.conf-r1"
        "clamd.initd::${_url}/app-antivirus/clamav/files/clamd.initd-r6"
        "boinc.confd::${_url}/sci-misc/boinc/files/boinc.conf"
        "boinc.initd::${_url}/sci-misc/boinc/files/boinc.init"
        "atd.confd::${_url}/sys-process/at/files/atd.confd"
        "atd.initd::${_url}/sys-process/at/files/atd.rc8"
        "libvirtd.confd::${_url}/app-emulation/libvirt/files/libvirtd.confd-r5"
        "libvirtd.initd::${_url}/app-emulation/libvirt/files/libvirtd.init-r16"
        "virtlockd.initd::${_url}/app-emulation/libvirt/files/virtlockd.init-r1"
        "virtlogd.initd::${_url}/app-emulation/libvirt/files/virtlogd.init-r1"
        "libvirt-guests.confd::${_url}/app-emulation/libvirt/files/libvirt-guests.confd"
        "libvirt-guests.initd::${_url}/app-emulation/libvirt/files/libvirt-guests.init-r2"
        "brltty.initd::${_url}/app-accessibility/brltty/files/brltty.rc"
        "laptop_mode.initd::${_url}/app-laptop/laptop-mode-tools/files/laptop_mode.init-1.4"
        "zfs.initd"
        "thermald.initd")
sha256sums=('4102ff09ba022994e37922634f937ef5f59acf6736e45c729de930f0da95c30d'
            '0be3575df8010523de6b37e98c417192e8ec481292ca9fb47c8d2211795e03a6'
            '9aa3b65bfc3f8cf2320a5bea7cc53a2ad744d8b5f42d8e3d0d2b30131a27af15'
            '197e44ba1f438a18f5f7d9f5858feb19c1ece4286d82a5e63caf9be5b964aa76'
            'bd336c156be06e3aa45b3185a26ba80232dfc0511fc99317cf2ef29af7347f34'
            '22a22c914d2a4f0fb5fc8495f4b7efcd1819efde548c9033ca612c181cd29eda'
            'ddefb75e696ba13581e9cccf6dbe70e744793613070c01ad9505b059ae6f2317'
            'f42f3c3d01b47fd7c1e1906d652fef009fd5e769c82fe523e367839a6d76c81d'
            'b29325498ee3b1f3d63672efcd1e93f0745eecdb9f4bb05fed82a2f085399484'
            '1a4613e1662773be5ea375cea7a36bdee124041b041329d18a55af2addcbdf4a'
            'd36ff77fa193a065d25e373723e03f1a9471205151b82c73a6574cce4f095962'
            'c404ad3b624004cab25bd3a89593cdeb0abbc25771d6e52caf2f37cb4f7b2b79'
            '2647b25b7516031e66ac252edafbaca2f2d6934473a6e15fdcc2a462ba0cb2ae'
            'c5fcf54620ae2c003fe6ea04ab624c3607c6b9b6f65c971c34fbb7293681d030'
            'aee017bea6c79a419ad40e55a4cc3ffbeacafe330d931b0dd8bfb4c6cb7c6183'
            '9ab6f022d2b2948660decf5e383984e6ddb9e9e5e6e2761c3031378ddd87e947'
            '64ccc4a582ec2c5d646708b61ab0edaf0e416f40a6fd71a298c68a6757f95f4d'
            'b12a6a9c52d2ac1088b678882ba1781b6784178fe29970f4a54b2aa596c60c66'
            '706467898d0b644c0fe1d216a4b3b9b82ed55b0cbe6aec2c2adbb4e9004145d9'
            '95297bb6113c18620184f0facd8e22155b51e4fe4c6008deff6c8c374d919574'
            '40803821f498267f6567436eedc18201b5ae4b5390d6872fb15a94200c2ac06f'
            'c7dc517cdb5ee10e2a07ccea15ec47ba0b7aff8ac1469204c8d7faf71bcae2c5'
            '97282007801cb9c0e3b431e2930dec3bb8ce8869f63f7e02d903846e96734684'
            '56dffdfa0d347ef667cb08a26ce68b1d445f71031ae1df3309ff3219f10307a9'
            'fef15f3781988c57b57f974202754bdbe075e15b3dbdc2555fae39b4d68efe27'
            '0f516f1f35afec9a7aeff1fe311d529b6907c3accaa476f982e0f93f7c932d61'
            '811da0e9b25d33af3e7f5f54765840e834fb55eb96d3654083991233ca294e81'
            '767a160c1b3392f0a12d3908a937548a2f604a9a121e744c309ee6f478420b02'
            '5782142ff80a6c41435edab5f67c2b12bc2e7f30f39eb2ac45fb198daf39c113'
            'a34c6fac6cdb544653029be77298bb72345d10c70824412384e32efb73098d01'
            '6c7c3dee85287db73eeae974cdb51a219d5ba142f55a0c49bf4f3d4f0a1c9511'
            '9f3f47a7af4d349a7c525455616139b5019d3b7d0290398ba8c50ab91a62d089'
            'dc5e12961c238027956bfbd38fbdeeaf5b32474d9e1c71599b4c7dd736f0de14'
            '286148f5391d42c04a62a13cc125fa2130b5821e50da913c5a20d3a913e5f2d1'
            'f7b9e27ef153eb73e359c4cf5a24c3ffee73d226de70e8e28af26ee04be67a10'
            '286148f5391d42c04a62a13cc125fa2130b5821e50da913c5a20d3a913e5f2d1'
            '2dcaef941f68dd89fafd55f909428b228e3483f5dbc5618df8488612fec9ae44'
            '9f3f47a7af4d349a7c525455616139b5019d3b7d0290398ba8c50ab91a62d089'
            'e3150bc918fcc684e608474ca802eefb7118f734710276e99806045650c49326'
            '7e45869759ef042e1bc24ab53d3bf7eda1b129eb308cc358105876199acbce9b'
            '37c95ff723fa578e9039613d09dbf790d99113a318c065422986c744519214e9'
            'f06714b70d9c14f9e55cb21c12a79d9bd9e9c04647751eaf2fdf57381fd7de62'
            'cab8b8cb8709f27a5fa9f1cfce4b58db24f5cd38b8e6badb91dac0809e6ca8de'
            '49df330796b2c1a57b2d838365822fe5d184e1215bdce5cc4d2a75837b6f3c5b'
            '24728f20907958c340e11d90bb8c0b69b968a1c68a2ed07bf7f04b8f04f96bc2'
            '4687bb248a3a7475fa845628f9bc6b12770eb5079f6f061ef8620219ac504ac4'
            '28ebd47810b0568fc7692218867d6804a1df70290681462f5555e230ca817732'
            '4a39006f886fd7db6cde1182ba65b10cd3f5f9fd4500d926aa26b30d55ab9db5'
            '286f5f11e54a73b41ebf1e35aae1db4c2c3e249a3bfce755ced84c8c1b361cc9'
            '25d10ff17fbac474d1605e6073e04dff3691957cff2ba808d676aa3a146a63fc'
            'f7d5a1d313041ffba2bba3db704976fb9ad8083964eaccaf0767124402e0810e'
            '4fe9dad976dac73b58db52984411ce8b54b7b4b8abc20b89730453c91251ee8c'
            '4f7fba7e64533868119c0f3355aa22932e163b208397323dc2cd96daadcc4079'
            'be31213406358f1512e457676d6148330fec163570db0ccfdb70eabb71957cc6'
            '3d61a6a2b25b15999720a9218e76cec64aceebaf281fbb9ed2f042e5a2bdbf71'
            'd668ecf7445f742918a65ac3af2b9fdc4ad49a3a84c1fe8ce76728f4a9bf3f99'
            'd5f85bb8c1d2010347f23badc422e98046b97a0066254739b5829fce07837d63'
            '3947c236b97909802900bf1436501885e246cc0474aa9f41d72d7568b153b2a0'
            'df59d6b7b884207c09a098188b8418944581c47ed19a1fac9725f847e4281e7f'
            'bb4feaca8af203fb52ed195d6b768b4ff7792aaf77effd01eea453604cffbec9'
            '7321272190ea9846ab7e19b034649c1cd711d4f94a6bdcaaaec2f683bb822e7d'
            '4bbb4e610d2d6bb22d83aa2980dca052a23b90fa6985c8245601b716dec986f4')

pkgver() {
	date +%Y%m%d
}

_inst_initd(){
	install -Dm755 ${srcdir}/$1.initd ${pkgdir}/etc/init.d/$1

	sed -e 's|#!/sbin/runscript|#!/usr/bin/openrc-run|' \
            -e 's|#!/sbin/openrc-run|#!/usr/bin/openrc-run|' \
		-e 's|/var/run|/run|g' \
		-e 's|/usr/sbin|/usr/bin|g' \
		-i ${pkgdir}/etc/init.d/$1
}

_inst_confd(){
	install -Dm755 ${srcdir}/$1.confd ${pkgdir}/etc/conf.d/$1
}

package_bitlbee-openrc() {
	pkgdesc="OpenRC bitlbee init script"
	depends=('openrc' 'bitlbee')
	backup=('etc/conf.d/bitlbee')

	_inst_confd 'bitlbee'
	_inst_initd 'bitlbee'

	sed -e 's|need logger net|need net\n	use logger|' \
		-i "${pkgdir}/etc/init.d/bitlbee"
}

package_cpupower-openrc() {
	pkgdesc="OpenRC cpupower init script"
	depends=('openrc' 'cpupower')
	backup=('etc/conf.d/cpupower')

	_inst_confd 'cpupower'
	_inst_initd 'cpupower'
}

package_connman-openrc() {
	pkgdesc="OpenRC connman init script"
	depends=('openrc' 'connman')
	backup=('etc/conf.d/connman')

	_inst_confd 'connman'
	_inst_initd 'connman'
}

package_cups-openrc() {
	pkgdesc="OpenRC cups init script"
	depends=('cups' 'dbus-openrc')
	optdepends=('avahi-openrc: avahi initscript')

	_inst_initd 'cupsd'

	sed -e 's|lp:lpadmin|daemon:sys|' \
		-e 's|@neededservices@|need dbus avahi-daemon|' \
		-i "${pkgdir}/etc/init.d/cupsd"
}

package_fcron-openrc() {
	pkgdesc="OpenRC fcron init script"
	depends=('openrc' 'fcron')
	provides=('openrc-cron')
	conflicts=('cronie'
		'cronie-openrc')

	_inst_initd 'fcron'

    sed -e 's|/usr/libexec|/usr/bin|g' \
		-i "${pkgdir}/etc/init.d/fcron"
}

package_ntp-openrc() {
	pkgdesc="OpenRC ntp init script"
	depends=('openrc' 'ntp')
	optdepends=('bind-openrc: bind initscript')
	provides=('openrc-timed')
	conflicts=('openntpd'
                'openntpd-openrc')
	backup=('etc/conf.d/ntpd'
		'etc/conf.d/ntp-client'
		'etc/init.d/sntp')

        for f in ntpd ntp-client sntp;do
            _inst_confd $f
            _inst_initd $f
        done
}

package_rsyslog-openrc() {
	pkgdesc="OpenRC rsyslog init script"
	depends=('openrc' 'rsyslog')
	backup=('etc/conf.d/rsyslog')

	_inst_confd 'rsyslog'
	_inst_initd 'rsyslog'
}

package_sane-openrc() {
	pkgdesc="OpenRC sane init script"
	depends=('openrc' 'sane')
	backup=('etc/conf.d/saned')

	_inst_confd 'saned'
	_inst_initd 'saned'

    sed -e 's|/run/saned/saned.pid|/run/saned.pid|' \
		-i ${pkgdir}/etc/init.d/saned
}

package_fuse-openrc(){
	pkgdesc="OpenRC fuse init script"
	depends=('openrc' 'fuse')

	_inst_initd 'fuse'
}

package_metalog-openrc() {
	pkgdesc="OpenRC metalog init script"
	depends=('openrc' 'metalog')
	backup=('etc/conf.d/metalog')

	_inst_confd 'metalog'
	_inst_initd 'metalog'
}

package_syslog-ng-openrc() {
	pkgdesc="OpenRC syslog-ng init script"
	depends=('openrc' 'syslog-ng')
	backup=('etc/conf.d/syslog-ng')

	_inst_confd 'syslog-ng'
	_inst_initd 'syslog-ng'
}

package_lm_sensors-openrc() {
	pkgdesc="OpenRC lm_sensors init script"
	depends=('openrc' 'lm_sensors')
	#backup=('etc/conf.d/sensord')

	_inst_initd 'sensord'
	_inst_initd 'fancontrol'
	_inst_initd 'lm_sensors'
}

package_lirc-utils-openrc() {
	pkgdesc="OpenRC lirc-utils init script"
	depends=('openrc' 'lirc-utils')
	backup=('etc/conf.d/lircd'
		'etc/conf.d/irexec')


	for f in lircd irexec;do
            _inst_confd $f
            _inst_initd $f
	done

	_inst_initd 'lircmd'
}

package_haveged-openrc() {
	pkgdesc="OpenRC haveged init script"
	depends=('openrc' 'haveged')
	backup=('etc/conf.d/haveged')

	_inst_confd 'haveged'
	_inst_initd 'haveged'
}

package_salt-openrc() {
	pkgdesc="OpenRC salt init scripts"
	depends=('openrc' 'salt')
	backup=('etc/conf.d/salt-master'
		'etc/conf.d/salt-minion'
		'etc/conf.d/salt-syncdic'
		'etc/conf.d/salt-api')

        for f in salt-master salt-minion salt-syncdic salt-api;do
            _inst_confd $f
            _inst_initd $f
        done
}

package_mpd-openrc(){
	pkgdesc="OpenRC fuse init script"
	depends=('openrc' 'mpd')

	_inst_initd 'mpd'
}

package_hdparm-openrc() {
	pkgdesc="OpenRC hdparm init script"
	depends=('openrc' 'hdparm')
	backup=('etc/conf.d/hdparm')

	_inst_confd 'hdparm'
	_inst_initd 'hdparm'
}

package_thermald-openrc() {
	pkgdesc="OpenRC thermald init script"
	depends=('dbus-openrc' 'thermald')

	_inst_initd 'thermald'
}

package_xe-guest-utilities-openrc() {
	pkgdesc="OpenRC xe-guest-utilities init script"
	depends=('openrc' 'xe-guest-utilities')

	_inst_initd 'xe-daemon'
}

package_virtualbox-guest-utils-openrc() {
	pkgdesc="OpenRC virtualbox-guest-utils init script"
	depends=('openrc' 'virtualbox-guest-utils')

	_inst_initd 'vboxservice'

	sed -e 's|vboxguest-service|VBoxService|' \
		-e 's|/sbin/modprobe|/usr/bin/modprobe|g' \
		-i "${pkgdir}/etc/init.d/vboxservice"
}

package_zfs-openrc() {
	pkgdesc="OpenRC zfs init script"
	depends=('openrc' 'zfs-utils')

	_inst_initd 'zfs'
}

package_clamav-openrc() {
	pkgdesc="OpenRC clamav init script"
	depends=('openrc' 'clamav')
	backup=('etc/conf.d/clamd')

	_inst_confd 'clamd'
	_inst_initd 'clamd'
}

package_boinc-openrc() {
	pkgdesc="OpenRC boinc init script"
	depends=('openrc' 'boinc')
	backup=('etc/conf.d/boinc')

	_inst_confd 'boinc'
	_inst_initd 'boinc'
}

package_at-openrc() {
	pkgdesc="OpenRC at init script"
	depends=('openrc' 'at')
	backup=('etc/conf.d/atd')

	_inst_confd 'atd'
	_inst_initd 'atd'

	sed -e 's|/var/run|/run|g' \
		-i "${pkgdir}/etc/conf.d/atd"
}

package_libvirt-openrc() {
	pkgdesc="OpenRC libvirt init script"
	depends=('openrc' 'libvirt')
	backup=('etc/conf.d/libvirtd')

	_inst_confd 'libvirtd'
	_inst_initd 'libvirtd'
	_inst_initd 'virtlockd'
	_inst_initd 'virtlogd'

	_inst_confd 'libvirt-guests'
	_inst_initd 'libvirt-guests'

	sed -e "s/USE_FLAG_FIREWALLD/need firewalld/" \
		-e "s/USE_FLAG_AVAHI/use avahi-daemon/" \
		-e "s/USE_FLAG_ISCSI/use iscsid/" \
		-e "s/USE_FLAG_RBD/use ceph/" \
		-i "${pkgdir}/etc/init.d/libvirtd"
}

package_brltty-openrc() {
	pkgdesc="OpenRC brltty init script"
	depends=('openrc' 'brltty')

	_inst_initd 'brltty'

	sed -e 's|/bin/brltty|/usr/bin/brltty|' \
		-i "${pkgdir}/etc/init.d/brltty"
}

package_laptop-mode-tools-openrc() {
	pkgdesc="OpenRC laptop-mode init script"
	depends=('openrc' 'laptop-mode-tools')

	_inst_initd 'laptop_mode'
}
